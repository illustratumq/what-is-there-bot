from aiogram import Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import ChatTypeFilter
from aiogram.types import Message, ChatType
from aiogram.utils.deep_linking import get_start_link

from app.database.services.enums import DealStatusEnum, DealTypeEnum
from app.database.services.repos import DealRepo, PostRepo
from app.keyboards import Buttons
from app.keyboards.inline.deal import to_bot_kb
from app.keyboards.reply.menu import basic_kb
from app.states.states import PrivateDealSG


async def create_new_deal_cmd(msg: Message, deal_db: DealRepo, state: FSMContext):
    deals = await deal_db.get_deal_type(DealTypeEnum.PRIVATE, DealStatusEnum.ACTIVE, msg.from_user.id)
    if deals:
        deal = deals[0]
        await state.update_data(role='executor' if deal.executor_id == msg.from_user.id else 'customer')
        await msg.answer('–ü–µ—Ä–µ—à–ª–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–º—É —É—á–∞—Å–Ω–∏–∫—É, –¥–ª—è —Ç–æ–≥–æ —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏',
                         reply_markup=basic_kb([Buttons.menu.back]))
        await new_deal_invite_msg(msg, deal, state)
        await state.finish()
    else:
        await msg.answer(
            '–î–ª—è —Ç–æ–≥–æ —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—É —É–≥–æ–¥—É, –æ–±–µ—Ä–∏ —Å–≤–æ—é —Ä–æ–ª—å —É –Ω—ñ–π',
            reply_markup=basic_kb([[Buttons.deal.customer], [Buttons.deal.executor], [Buttons.menu.back]]))
        await PrivateDealSG.SelectRole.set()


async def new_deal_invite_msg(msg: Message, deal: DealRepo.model, state: FSMContext):
    data = await state.get_data()
    role = data['role']
    roles = {
        'customer': '–≤–∏–∫–æ–Ω–∞–≤—Ü–µ–º',
        'executor': '–∑–∞–º–æ–≤–Ω–∏–∫–æ–º'
    }
    link = await get_start_link(f'private_deal-{deal.deal_id}')
    await msg.answer(f'–ó–∞–ø—Ä–æ—à—É—é —Ç–µ–±–µ —Å—Ç–∞—Ç–∏ {roles[role]} –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ñ–π —É–≥–æ–¥—ñ. –©–æ–± –ø—Ä–∏–π–Ω—è—Ç–∏ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –Ω–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É!',
                     reply_markup=to_bot_kb(text=f'–°—Ç–∞—Ç–∏ {roles[role]}', url=link), disable_web_page_preview=True)


async def save_deal_role(msg: Message, deal_db: DealRepo, post_db: PostRepo, state: FSMContext):
    role = 'executor' if msg.text == Buttons.deal.executor else 'customer'
    await state.update_data(role=role)
    deal = await deal_db.add(**{role + '_id': msg.from_user.id}, type=DealTypeEnum.PRIVATE,
                             status=DealStatusEnum.ACTIVE)
    post = await post_db.add(
        user_id=msg.from_user.id, title=f'–ü—Ä–∏–≤–∞—Ç–Ω–∞ —É–≥–æ–¥–∞ #{deal.deal_id}',
        about=f'–í–ª–∞—Å–Ω–∏–∫ —É–≥–æ–¥–∏ {msg.from_user.full_name} ({msg.from_user.id})',
        price=0
    )
    await deal_db.update_deal(deal.deal_id, post_id=post.post_id)
    await msg.answer('üéâ –ù–æ–≤–∞ –ø—Ä–∏–≤–∞—Ç–Ω–∞ —É–≥–æ–¥–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞!\n\n–ü–µ—Ä–µ—à–ª–∏ –Ω–∞—Å—Ç—É–ø–Ω–µ '
                     '–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —ñ–Ω—à–æ–º—É —É—á–∞—Å–Ω–∏–∫—É, –¥–ª—è —Ç–æ–≥–æ —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏', reply_markup=basic_kb([Buttons.menu.back]))
    await new_deal_invite_msg(msg, deal, state)
    await state.finish()


def setup(dp: Dispatcher):
    dp.register_message_handler(
        create_new_deal_cmd, ChatTypeFilter(ChatType.PRIVATE), text=Buttons.menu.new_deal, state='*')
    dp.register_message_handler(save_deal_role, ChatTypeFilter(ChatType.PRIVATE), state=PrivateDealSG.SelectRole)